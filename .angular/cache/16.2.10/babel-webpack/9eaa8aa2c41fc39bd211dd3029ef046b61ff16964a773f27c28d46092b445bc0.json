{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nexport class RegistrationFormComponent {\n  constructor(fb, http) {\n    this.fb = fb;\n    this.http = http;\n    this.registrationForm = this.fb.group({\n      name: ['', Validators.required],\n      gender: ['', Validators.required],\n      dob: ['', Validators.required],\n      email: ['', Validators.required],\n      college: ['', Validators.required]\n    });\n  }\n  submitForm() {\n    if (this.registrationForm.valid) {\n      const formData = this.registrationForm.value;\n      this.http.post('http://localhost:8080/api/register', formData).subscribe(response => {\n        console.log(\"Form submitted successfully\", response);\n      });\n    }\n  }\n  static #_ = this.ɵfac = function RegistrationFormComponent_Factory(t) {\n    return new (t || RegistrationFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegistrationFormComponent,\n    selectors: [[\"app-registration-form\"]],\n    decls: 27,\n    vars: 2,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\"], [\"for\", \"gender\"], [\"id\", \"gender\", \"formControlName\", \"gender\"], [\"value\", \"male\"], [\"value\", \"female\"], [\"for\", \"dob\"], [\"type\", \"date\", \"id\", \"dob\", \"formControlName\", \"dob\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"formControlName\", \"email\"], [\"for\", \"college\"], [\"type\", \"text\", \"id\", \"college\", \"formControlName\", \"college\"], [\"type\", \"submit\", 3, \"disabled\"]],\n    template: function RegistrationFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function RegistrationFormComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.submitForm();\n        });\n        i0.ɵɵelementStart(1, \"div\")(2, \"label\", 1);\n        i0.ɵɵtext(3, \"Name :\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"input\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\")(6, \"label\", 3);\n        i0.ɵɵtext(7, \"Gender :\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"select\", 4)(9, \"option\", 5);\n        i0.ɵɵtext(10, \"Male\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"option\", 6);\n        i0.ɵɵtext(12, \"Female\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(13, \"div\")(14, \"label\", 7);\n        i0.ɵɵtext(15, \"Date of Birth :\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"input\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\")(18, \"label\", 9);\n        i0.ɵɵtext(19, \"Email :\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(20, \"input\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"div\")(22, \"label\", 11);\n        i0.ɵɵtext(23, \"College\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(24, \"input\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"button\", 13);\n        i0.ɵɵtext(26, \"Submit\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.registrationForm);\n        i0.ɵɵadvance(25);\n        i0.ɵɵproperty(\"disabled\", !ctx.registrationForm.valid);\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"form[_ngcontent-%COMP%]{\\n    max-width: 400px;\\n    margin:0 auto;\\n    padding:20px;\\n    border:1px solid #ccc;\\n    border-radius:5px;\\n    border-radius:5px;\\n    box-shadow: 0 2px 5px rgba(0,0,0,0.1);\\n}\\n\\ndiv[_ngcontent-%COMP%]{\\n    margin-bottom: 15px;\\n}\\n\\nlabel[_ngcontent-%COMP%] {\\n    display:block;\\n    font-weight: bold;\\n    margin-bottom:5px;\\n}\\ninput[_ngcontent-%COMP%], select[_ngcontent-%COMP%]{\\n    width:100%;\\n    padding:8px;\\n    box-sizing:border-box;\\n    border:1px solid #ccc;\\n    border-radius:4px;\\n}\\n\\nbutton[_ngcontent-%COMP%]{\\n    background-color: #4caf50;\\n    color:white;\\n    padding:10px 15px;\\n    border: none;\\n    border-radius:4px;\\n    cursor:pointer;\\n}\\n\\nbutton[_ngcontent-%COMP%]:disabled{\\n    background-color: #d3d3d3;\\n    cursor:not-allowed;\\n\\n}\\n\\n.error-message[_ngcontent-%COMP%]{\\n    color:#ff0000;\\n    font-size:14px;\\n    margin-top:5px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcmVnaXN0cmF0aW9uLWZvcm0vcmVnaXN0cmF0aW9uLWZvcm0uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGdCQUFnQjtJQUNoQixhQUFhO0lBQ2IsWUFBWTtJQUNaLHFCQUFxQjtJQUNyQixpQkFBaUI7SUFDakIsaUJBQWlCO0lBQ2pCLHFDQUFxQztBQUN6Qzs7QUFFQTtJQUNJLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLGFBQWE7SUFDYixpQkFBaUI7SUFDakIsaUJBQWlCO0FBQ3JCO0FBQ0E7O0lBRUksVUFBVTtJQUNWLFdBQVc7SUFDWCxxQkFBcUI7SUFDckIscUJBQXFCO0lBQ3JCLGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJLHlCQUF5QjtJQUN6QixXQUFXO0lBQ1gsaUJBQWlCO0lBQ2pCLFlBQVk7SUFDWixpQkFBaUI7SUFDakIsY0FBYztBQUNsQjs7QUFFQTtJQUNJLHlCQUF5QjtJQUN6QixrQkFBa0I7O0FBRXRCOztBQUVBO0lBQ0ksYUFBYTtJQUNiLGNBQWM7SUFDZCxjQUFjO0FBQ2xCIiwic291cmNlc0NvbnRlbnQiOlsiZm9ybXtcclxuICAgIG1heC13aWR0aDogNDAwcHg7XHJcbiAgICBtYXJnaW46MCBhdXRvO1xyXG4gICAgcGFkZGluZzoyMHB4O1xyXG4gICAgYm9yZGVyOjFweCBzb2xpZCAjY2NjO1xyXG4gICAgYm9yZGVyLXJhZGl1czo1cHg7XHJcbiAgICBib3JkZXItcmFkaXVzOjVweDtcclxuICAgIGJveC1zaGFkb3c6IDAgMnB4IDVweCByZ2JhKDAsMCwwLDAuMSk7XHJcbn1cclxuXHJcbmRpdntcclxuICAgIG1hcmdpbi1ib3R0b206IDE1cHg7XHJcbn1cclxuXHJcbmxhYmVsIHtcclxuICAgIGRpc3BsYXk6YmxvY2s7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgIG1hcmdpbi1ib3R0b206NXB4O1xyXG59XHJcbmlucHV0LFxyXG5zZWxlY3R7XHJcbiAgICB3aWR0aDoxMDAlO1xyXG4gICAgcGFkZGluZzo4cHg7XHJcbiAgICBib3gtc2l6aW5nOmJvcmRlci1ib3g7XHJcbiAgICBib3JkZXI6MXB4IHNvbGlkICNjY2M7XHJcbiAgICBib3JkZXItcmFkaXVzOjRweDtcclxufVxyXG5cclxuYnV0dG9ue1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzRjYWY1MDtcclxuICAgIGNvbG9yOndoaXRlO1xyXG4gICAgcGFkZGluZzoxMHB4IDE1cHg7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICBib3JkZXItcmFkaXVzOjRweDtcclxuICAgIGN1cnNvcjpwb2ludGVyO1xyXG59XHJcblxyXG5idXR0b246ZGlzYWJsZWR7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZDNkM2QzO1xyXG4gICAgY3Vyc29yOm5vdC1hbGxvd2VkO1xyXG5cclxufVxyXG5cclxuLmVycm9yLW1lc3NhZ2V7XHJcbiAgICBjb2xvcjojZmYwMDAwO1xyXG4gICAgZm9udC1zaXplOjE0cHg7XHJcbiAgICBtYXJnaW4tdG9wOjVweDtcclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["Validators","RegistrationFormComponent","constructor","fb","http","registrationForm","group","name","required","gender","dob","email","college","submitForm","valid","formData","value","post","subscribe","response","console","log","_","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","HttpClient","_2","selectors","decls","vars","consts","template","RegistrationFormComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","RegistrationFormComponent_Template_form_ngSubmit_0_listener","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵproperty","ɵɵadvance"],"sources":["C:\\Users\\w136647\\OneDrive - Worldline\\Bureau\\angularpjt\\src\\app\\registration-form\\registration-form.component.ts","C:\\Users\\w136647\\OneDrive - Worldline\\Bureau\\angularpjt\\src\\app\\registration-form\\registration-form.component.html"],"sourcesContent":["import {Component} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {HttpClient} from '@angular/common/http'\n\n@Component({\n    selector: 'app-registration-form',\n    templateUrl:'./registration-form.component.html',\n    styleUrls:['registration-form.component.css']\n})\n\nexport class RegistrationFormComponent{\n    registrationForm: FormGroup;\n \n\nconstructor(private fb:FormBuilder, private http:HttpClient){\n    this.registrationForm=this.fb.group({\n        name:['', Validators.required],\n        gender:['', Validators.required],\n        dob:['', Validators.required],\n        email:['', Validators.required],\n        college:['', Validators.required],\n\n    });\n}\n\nsubmitForm(){\n    if(this.registrationForm.valid)\n    {\n        const formData=this.registrationForm.value;\n        this.http.post('http://localhost:8080/api/register',formData).subscribe(response=>{\n          console.log(\"Form submitted successfully\",response);\n        });\n    }\n}\n}","<form [formGroup]=\"registrationForm\" (ngSubmit)=\"submitForm()\">\n    <div>\n      <label for=\"name\">Name :</label>\n      <input type=\"text\" id=\"name\" formControlName=\"name\">\n    </div>\n    <div>\n      <label for=\"gender\">Gender :</label>\n      <select id=\"gender\" formControlName=\"gender\">\n          <option value=\"male\">Male</option>\n          <option value=\"female\">Female</option>\n      </select>\n    </div>\n    <div>\n      <label for=\"dob\">Date of Birth :</label>\n      <input type=\"date\" id=\"dob\" formControlName=\"dob\">\n  </div>\n  <div>\n     <label for=\"email\">Email :</label>\n     <input type=\"email\" id=\"email\" formControlName=\"email\">\n     <!-- <div *ngIf=\"registrationForm.get('email').invalid('email') && registrationForm.get('email').dirty\">Invalid Email\n  </div> -->\n  \n  </div>\n  \n  <div>\n      <label for=\"college\">College</label>\n      <input type=\"text\" id=\"college\" formControlName=\"college\">\n  \n  </div>\n  <button type=\"submit\" [disabled]=\"!registrationForm.valid\">Submit</button>\n  \n  </form>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}