{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/common\";\nfunction LoginFormComponent_div_17_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginFormComponent_div_17_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Password must be at least 8 characters long \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginFormComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, LoginFormComponent_div_17_div_1_Template, 2, 0, \"div\", 10);\n    i0.ɵɵtemplate(2, LoginFormComponent_div_17_div_2_Template, 2, 0, \"div\", 10);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.formControls[\"password\"].errors == null ? null : ctx_r0.formControls[\"password\"].errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.formControls[\"password\"].errors == null ? null : ctx_r0.formControls[\"password\"].errors[\"minlength\"]);\n  }\n}\nexport class LoginFormComponent {\n  constructor(fb, http) {\n    this.fb = fb;\n    this.http = http;\n    this.locations = ['Tamilnadu', 'AP'];\n    this.colleges = {\n      'Tamilnadu': ['tn1', 'tn2'],\n      'AP': ['ap1', 'ap2']\n    };\n    this.formgp = this.fb.group({\n      username1: ['', Validators.required],\n      userid1: ['', Validator.required],\n      password: ['', [Validators.required, Validators.minLength(8)]]\n    });\n  }\n  submitForm() {\n    // Check if the form is valid before submitting\n    if (this.formgp.valid) {\n      // Your submission logic here\n      console.log(this.formgp.value); // For example, logging the form value\n    }\n  }\n\n  get formControls() {\n    return this.formgp.controls;\n  }\n  static #_ = this.ɵfac = function LoginFormComponent_Factory(t) {\n    return new (t || LoginFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginFormComponent,\n    selectors: [[\"app-login-form\"]],\n    decls: 20,\n    vars: 3,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"userid1\"], [\"type\", \"text\", \"id\", \"userid1\", \"formControlName\", \"userid1\"], [\"for\", \"username1\"], [\"type\", \"text\", \"id\", \"username1\", \"formControlName\", \"username1\"], [\"for\", \"lastname1\"], [\"type\", \"text\", \"id\", \"lastname1\", \"formControlName\", \"lastname1\"], [\"for\", \"password\"], [\"id\", \"password\", \"type\", \"password\", \"formControlName\", \"password\", 1, \"form-control\"], [4, \"ngIf\"], [\"type\", \"submit\", 3, \"disabled\"]],\n    template: function LoginFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginFormComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.submitForm();\n        });\n        i0.ɵɵelementStart(1, \"div\", 1)(2, \"label\", 2);\n        i0.ɵɵtext(3, \"UserID :\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"input\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\")(6, \"label\", 4);\n        i0.ɵɵtext(7, \"UserName :\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\")(10, \"label\", 6);\n        i0.ɵɵtext(11, \"LastName :\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\")(14, \"label\", 8);\n        i0.ɵɵtext(15, \"Password:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"input\", 9);\n        i0.ɵɵtemplate(17, LoginFormComponent_div_17_Template, 3, 2, \"div\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"button\", 11);\n        i0.ɵɵtext(19, \"Submit\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.formgp);\n        i0.ɵɵadvance(17);\n        i0.ɵɵproperty(\"ngIf\", ctx.formControls[\"password\"].touched && ctx.formControls[\"password\"].invalid);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.formgp.invalid);\n      }\n    },\n    dependencies: [i3.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"form[_ngcontent-%COMP%]{\\n    max-width: 400px;\\n    margin:0 auto;\\n    padding:20px;\\n    border:1px solid #ccc;\\n    border-radius:5px;\\n    border-radius:5px;\\n    box-shadow: 0 2px 5px rgba(0,0,0,0.1);\\n}\\n\\ndiv[_ngcontent-%COMP%]{\\n    margin-bottom: 15px;\\n}\\n\\nlabel[_ngcontent-%COMP%] {\\n    display:block;\\n    font-weight: bold;\\n    margin-bottom:5px;\\n}\\ninput[_ngcontent-%COMP%], select[_ngcontent-%COMP%]{\\n    width:100%;\\n    padding:8px;\\n    box-sizing:border-box;\\n    border:1px solid #ccc;\\n    border-radius:4px;\\n}\\n\\nbutton[_ngcontent-%COMP%]{\\n    background-color: #4caf50;\\n    color:white;\\n    padding:10px 15px;\\n    border: none;\\n    border-radius:4px;\\n    cursor:pointer;\\n}\\n\\nbutton[_ngcontent-%COMP%]:disabled{\\n    background-color: #d3d3d3;\\n    cursor:not-allowed;\\n\\n}\\n\\n.error-message[_ngcontent-%COMP%]{\\n    color:#ff0000;\\n    font-size:14px;\\n    margin-top:5px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4tZm9ybS9sb2dpbi1mb3JtLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxnQkFBZ0I7SUFDaEIsYUFBYTtJQUNiLFlBQVk7SUFDWixxQkFBcUI7SUFDckIsaUJBQWlCO0lBQ2pCLGlCQUFpQjtJQUNqQixxQ0FBcUM7QUFDekM7O0FBRUE7SUFDSSxtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsaUJBQWlCO0lBQ2pCLGlCQUFpQjtBQUNyQjtBQUNBOztJQUVJLFVBQVU7SUFDVixXQUFXO0lBQ1gscUJBQXFCO0lBQ3JCLHFCQUFxQjtJQUNyQixpQkFBaUI7QUFDckI7O0FBRUE7SUFDSSx5QkFBeUI7SUFDekIsV0FBVztJQUNYLGlCQUFpQjtJQUNqQixZQUFZO0lBQ1osaUJBQWlCO0lBQ2pCLGNBQWM7QUFDbEI7O0FBRUE7SUFDSSx5QkFBeUI7SUFDekIsa0JBQWtCOztBQUV0Qjs7QUFFQTtJQUNJLGFBQWE7SUFDYixjQUFjO0lBQ2QsY0FBYztBQUNsQiIsInNvdXJjZXNDb250ZW50IjpbImZvcm17XHJcbiAgICBtYXgtd2lkdGg6IDQwMHB4O1xyXG4gICAgbWFyZ2luOjAgYXV0bztcclxuICAgIHBhZGRpbmc6MjBweDtcclxuICAgIGJvcmRlcjoxcHggc29saWQgI2NjYztcclxuICAgIGJvcmRlci1yYWRpdXM6NXB4O1xyXG4gICAgYm9yZGVyLXJhZGl1czo1cHg7XHJcbiAgICBib3gtc2hhZG93OiAwIDJweCA1cHggcmdiYSgwLDAsMCwwLjEpO1xyXG59XHJcblxyXG5kaXZ7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxNXB4O1xyXG59XHJcblxyXG5sYWJlbCB7XHJcbiAgICBkaXNwbGF5OmJsb2NrO1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICBtYXJnaW4tYm90dG9tOjVweDtcclxufVxyXG5pbnB1dCxcclxuc2VsZWN0e1xyXG4gICAgd2lkdGg6MTAwJTtcclxuICAgIHBhZGRpbmc6OHB4O1xyXG4gICAgYm94LXNpemluZzpib3JkZXItYm94O1xyXG4gICAgYm9yZGVyOjFweCBzb2xpZCAjY2NjO1xyXG4gICAgYm9yZGVyLXJhZGl1czo0cHg7XHJcbn1cclxuXHJcbmJ1dHRvbntcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICM0Y2FmNTA7XHJcbiAgICBjb2xvcjp3aGl0ZTtcclxuICAgIHBhZGRpbmc6MTBweCAxNXB4O1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gICAgYm9yZGVyLXJhZGl1czo0cHg7XHJcbiAgICBjdXJzb3I6cG9pbnRlcjtcclxufVxyXG5cclxuYnV0dG9uOmRpc2FibGVke1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2QzZDNkMztcclxuICAgIGN1cnNvcjpub3QtYWxsb3dlZDtcclxuXHJcbn1cclxuXHJcbi5lcnJvci1tZXNzYWdle1xyXG4gICAgY29sb3I6I2ZmMDAwMDtcclxuICAgIGZvbnQtc2l6ZToxNHB4O1xyXG4gICAgbWFyZ2luLXRvcDo1cHg7XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","LoginFormComponent_div_17_div_1_Template","LoginFormComponent_div_17_div_2_Template","ɵɵadvance","ɵɵproperty","ctx_r0","formControls","errors","LoginFormComponent","constructor","fb","http","locations","colleges","formgp","group","username1","required","userid1","Validator","password","minLength","submitForm","valid","console","log","value","controls","_","ɵɵdirectiveInject","i1","FormBuilder","i2","HttpClient","_2","selectors","decls","vars","consts","template","LoginFormComponent_Template","rf","ctx","ɵɵlistener","LoginFormComponent_Template_form_ngSubmit_0_listener","ɵɵelement","LoginFormComponent_div_17_Template","touched","invalid"],"sources":["C:\\Users\\w136647\\OneDrive - Worldline\\Bureau\\angularpjt\\src\\app\\login-form\\login-form.component.ts","C:\\Users\\w136647\\OneDrive - Worldline\\Bureau\\angularpjt\\src\\app\\login-form\\login-form.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder,FormControl,FormGroup,Validators } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-login-form',\n  templateUrl: './login-form.component.html',\n  styleUrls: ['./login-form.component.css']\n})\nexport class LoginFormComponent{\n  value:any;\n  locations:string[]=['Tamilnadu','AP'];\n  colleges:{[key:string]:string[]}={\n      'Tamilnadu':['tn1','tn2'],\n      'AP':['ap1','ap2'],\n  }\n\nformgp:FormGroup;\nconstructor(private fb:FormBuilder, private http:HttpClient){\n  this.formgp=this.fb.group({\n      username1:['', Validators.required],\n      userid1:['',Validator.required]\n      password: ['', [Validators.required, Validators.minLength(8)]],\n      \n\n  });\n\n}\nsubmitForm() {\n  // Check if the form is valid before submitting\n  if (this.formgp.valid) {\n    // Your submission logic here\n    console.log(this.formgp.value); // For example, logging the form value\n  }\n}\nget formControls() {\n  return this.formgp.controls;\n}\n}\n","<form  [formGroup]=\"formgp\" (ngSubmit)=\"submitForm()\">\n    <div class=\"form-group\">\n      <label for=\"userid1\">UserID :</label>\n      <input type=\"text\" id=\"userid1\" formControlName=\"userid1\">\n    </div>\n    <div>\n      <label for=\"username1\">UserName :</label>\n      <input type=\"text\" id=\"username1\" formControlName=\"username1\">\n    </div>\n    <div>\n      <label for=\"lastname1\">LastName :</label>\n      <input type=\"text\" id=\"lastname1\" formControlName=\"lastname1\">\n    </div>\n    <div>\n        <label for=\"password\">Password:</label>\n        <input id=\"password\" type=\"password\" class=\"form-control\" formControlName=\"password\" />\n        <div *ngIf=\"formControls['password'].touched && formControls['password'].invalid\">\n          <div *ngIf=\"formControls['password'].errors?.['required']\">Password is required</div>\n          <div *ngIf=\"formControls['password'].errors?.['minlength']\">\n            Password must be at least 8 characters long\n          </div>\n        </div>\n      </div>\n      <button type=\"submit\" [disabled]=\"formgp.invalid\">Submit</button>\n  \n  </form>\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}